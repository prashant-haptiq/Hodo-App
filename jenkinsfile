pipeline {
  agent any 

  environment {
    GITHUB_REPO = "https://github.com/prashant-haptiq/Hodo-App.git"
    IMAGE_NAME = "flask_hodo_app"
    CONTAINER_NAME = "hodo_container"

  }
  stages {
    stage ('Pull') {
      steps {
        echo 'pull code from github'
        git branch: 'master' , url:"${GITHUB_REPO}"
      }

    }

    stage ('Build') {
      steps {
        echo 'Building docker image'
         
        sh "docker build -t ${IMAGE_NAME} ."


      }

    }

    stage ('Test') {
      steps {
        echo 'Running test inside the container using pytest' 
        sh ''' 
          #running test inside the new container which we build from image
          #--rm flag will automatically remove the container after the test 
          #if the test fails , so the pipeline stage 

          docker run --rm ${IMAGE_NAME} pytest

          '''

      }


    }

    stage ('Deploy') {
      steps {
        echo 'running container' 
        sh '''
          #stopping old container if exists and starting a new one , to avoid port conflicts
          docker stop ${CONTAINER_NAME} || true 
          docker rm ${CONTAINER_NAME} || true

          #run the new container in detached mode
          docker run -d --name ${CONTAINER_NAME} -p 5000:5000 ${IMAGE_NAME} 

          echo 'application is running at http://34.235.185.38:5000'
          
          '''

      }

    }


  }

  post {
    success {
      echo 'Application is running on port 5000' 

    }
    failure {
      echo 'ERROR! check logs'

    }

  }

}
